package controller;import java.io.IOException;import java.io.PrintWriter;import java.util.ArrayList;import java.util.List;import javax.servlet.ServletException;import javax.servlet.annotation.WebServlet;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import model.Requisicao;import model.User;import persistence.GenericDAOException;import persistence.requisicao.RequisicaoDao;@WebServlet({ "/listarChamados", "/novoChamado", "/editarChamado", "/consultarChamado", "/responder" })public class ControlRequisicao extends HttpServlet {	private static final long serialVersionUID = 1L;	public ControlRequisicao() {		super();	}	protected void doGet(HttpServletRequest request, HttpServletResponse response)			throws ServletException, IOException {		HttpServletRequest req = (HttpServletRequest) request;		if ("/listarChamados".equals(req.getServletPath())) {			listar(request, response);		} else if ("/consultarChamado".equals(req.getServletPath())) {			consultar(request, response);		}	}	protected void doPost(HttpServletRequest request, HttpServletResponse response)			throws ServletException, IOException {		HttpServletRequest req = (HttpServletRequest) request;		if ("/novoChamado".equals(req.getServletPath())) {			adicionar(request, response);		} else if ("/editarChamado".equals(req.getServletPath())) {			editar(request, response);		}	}	private void adicionar(HttpServletRequest request, HttpServletResponse response) {		System.out.println("Entrei no método de inserir no banco");		try {			PrintWriter out = response.getWriter();			if (request.getParameter("titulo") != null) {				if (request.getParameter("titulo").trim().length() < 4) {					out.println("Preencha o Campo titulo");				} else if (request.getParameter("conteudo").length() < 4) {					out.println("Preencha o Campo conteudo");				} else {					try {						RequisicaoDao cDao = new RequisicaoDao();						Requisicao requisicao = new Requisicao(request.getParameter("titulo"),								request.getParameter("conteudo"));						cDao.persistir(requisicao, (User) request.getSession().getAttribute("LOGADO"));						response.sendRedirect("./index.jsp");					} catch (GenericDAOException e) {						e.printStackTrace();					}				}			}		} catch (IOException e) {			System.out.println("Erro ao execultar do Post: " + e);			e.printStackTrace();		}	}	private void listar(HttpServletRequest request, HttpServletResponse response) {		List<Requisicao> cList = new ArrayList<Requisicao>();		RequisicaoDao dao = new RequisicaoDao();		User u = (User) request.getSession().getAttribute("LOGADO");		try {			cList = dao.listar(u);			request.getSession().setAttribute("LIST", cList);//			response.sendRedirect("./listarChamados.jsp");		} catch (GenericDAOException e) { //| IOException 			e.printStackTrace();		}	}	private void consultar(HttpServletRequest request, HttpServletResponse response) {		Requisicao c = null;		RequisicaoDao cDao = new RequisicaoDao();		try {			c = cDao.consultar(Integer.parseInt(request.getParameter("id")));			request.getSession().setAttribute("EDIT", c);			response.sendRedirect("./editarChamado.jsp");		} catch (NumberFormatException | GenericDAOException | IOException e) {			e.printStackTrace();		}	}	private void editar(HttpServletRequest request, HttpServletResponse response) {		User u = (User) request.getSession().getAttribute("LOGADO");		switch (String.valueOf(u.getPermissao())) {		case "G":			break;		case "R":			break;		case "T":			if (request.getParameter("situacao") != null) {				RequisicaoDao cDao = new RequisicaoDao();				Requisicao c = new Requisicao(request.getParameter("situacao"), request.getParameter("resposta"));				try {					cDao.responder(c, u);					response.sendRedirect("./listarChamados");				} catch (GenericDAOException | IOException e) {					e.printStackTrace();				}			}			break;		case "C":			try {				//ADD SOFTDELEAT				response.sendRedirect("./listarChamados");			} catch (IOException e) {				e.printStackTrace();			}			break;		}	}}