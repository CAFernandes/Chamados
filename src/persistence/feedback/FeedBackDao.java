package persistence.feedback;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;import model.FeedBack;import persistence.connection.GenericDao;import persistence.connection.iGenericDao;public class FeedBackDao implements iFeedBackDao {	private Connection connection;		public FeedBackDao () {		iGenericDao gDao = new GenericDao();		try {			setConnection(gDao.getConnection());		} catch (ClassNotFoundException e) {			e.printStackTrace();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public void inserir(FeedBack feed) {		String sql = "INSERT INTO feedback (id_cliente, id_requisicao, nota, comentario) VALUES(?,?,?,?)";		try {			PreparedStatement ps = connection.prepareStatement(sql);			ps.setInt(1, feed.getIdCliente());			ps.setInt(2, feed.getIdRequisicao());			ps.setInt(3, feed.getNota());			ps.setString(4, feed.getComentario());			ps.executeQuery();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}			}	@Override	public List<FeedBack> listar(FeedBack feed) {		List<FeedBack> lFeed = new ArrayList<FeedBack>();		String sql = "SELECT feed.id, c.nome, feed.nota, feed.comentario, r.titulo, r.data_cri, r.data_atualiza, t.nome, t.id"				+ "FROM feedback feed, pessoa c, requisicao r, pessoa t";		try {			PreparedStatement ps = connection.prepareStatement(sql);			ResultSet rs = ps.executeQuery();			while(rs.next()) {							}		} catch (SQLException e) {			e.printStackTrace();		}		return lFeed;	}	@Override	public void setConnection(Connection connection) {		this.connection = connection;	}}