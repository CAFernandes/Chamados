package persistence.requisicao;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;import model.Camada;import model.Requisicao;import model.User;import persistence.GenericDAOException;import persistence.connection.GenericDao;import persistence.connection.iGenericDao;public class RequisicaoDao implements iRequisicaoDao {	private Connection connection;	public RequisicaoDao() {		iGenericDao gDao = new GenericDao();		try {			setConnection(gDao.getConnection());		} catch (ClassNotFoundException e) {			e.printStackTrace();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public void persistir(Requisicao requisicao, User user) throws GenericDAOException {		String sql = "EXEC sp_insere_chamado ?, ?, ?";		PreparedStatement ps;		try {			ps = connection.prepareStatement(sql);			ps.setString(1, requisicao.getTitulo());			ps.setString(2, requisicao.getDescricao());			ps.setInt(3, user.getId());			ps.execute();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public void responder(Requisicao requisicao, User user) throws GenericDAOException {		String sql = "EXEC sp_altera_requisicao ?, ?, ?, ?";		try {			PreparedStatement ps = connection.prepareStatement(sql);			ps.setInt(1, user.getId());			ps.setInt(2, requisicao.getSituacao().getId());			ps.setString(3, requisicao.getResposta());			ps.setInt(4, requisicao.getCategoria().getId());			ps.execute();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public Requisicao consultar(int id) throws GenericDAOException {		Requisicao c = null;//		String sql = "SELECT * FROM fn_get_requisicoes_cliente ?";//		try {//			PreparedStatement ps = connection.prepareStatement(sql);//			ps.setInt(1, id);//			ResultSet rs = ps.executeQuery();//			while (rs.next()) {//				Camada cat = new Camada();//				cat.setTitulo(rs.getString("categoria"));//				cat.setId(rs.getInt("id_categoria"));//				Camada sit = new Camada();//				sit.setId(rs.getInt("id_situacao"));//				sit.setTitulo(rs.getString("situacao"));//				c = new Requisicao(rs.getInt("id_chamado"), rs.getString("titulo"), rs.getString("descricao"),//						cat, rs.getDate("data_cri"), rs.getDate("data_atualiza"), rs.getString("resposta"), sit);//			}//			rs.close();//			ps.close();//		} catch (SQLException e) {//			e.printStackTrace();//		}		return c;	}	@Override	public void deleat(int id) throws GenericDAOException {		String sql = "EXEC sp_deleat_chamado ?";		try {			PreparedStatement ps = connection.prepareStatement(sql);			ps.setInt(1, id);			ps.execute();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public List<Requisicao> listar(User u) throws GenericDAOException {		List<Requisicao> list = new ArrayList<Requisicao>();		String sql = null;		switch (u.getPermissao()) {		case 'G':			sql = "SELECT * FROM fn_get_requisicoes_gerente(?)";			break;		case 'R':			sql = "SELECT * FROM fn_get_requisicoes_coordenador(?)";			break;		case 'T':			sql = "SELECT * FROM fn_get_requisicoes_tecnico(?)";			break;		case 'C':			sql = "SELECT * FROM fn_get_requisicoes_cliente(?)";			break;		}		try {			PreparedStatement ps = connection.prepareStatement(sql);			ps.setInt(1, u.getId());			ResultSet rs = ps.executeQuery();			while (rs.next()) {				Requisicao req = null;				User c, t, r = null;				Camada cat, sit = null;				switch (u.getPermissao()) {				case 'G':					c = new User(rs.getInt("id_cliente"), rs.getString("cliente"));					t = new User(rs.getInt("id_cliente"), rs.getString("cliente"));					r = new User(rs.getInt("id_cliente"), rs.getString("cliente"));					cat = new Camada(rs.getInt("id_categoria"), rs.getString("titulo"));					sit = new Camada(rs.getInt("id_situcao"), rs.getString("situacao"));					req = new Requisicao(rs.getInt("id"), rs.getString("titulo"), rs.getString("descricao"), cat, 							rs.getDate("data_cri"), rs.getDate("data_atualiza"), rs.getString("resposta"), 							sit, c, t, r);					break;				case 'R':					t = new User(rs.getInt("id_cliente"), rs.getString("cliente"));					c = new User(rs.getInt("id_cliente"), rs.getString("cliente"));					cat = new Camada(rs.getInt("id_categoria"), rs.getString("titulo"));					sit = new Camada(rs.getInt("id_situcao"), rs.getString("situacao"));					req = new Requisicao(rs.getInt("id"), rs.getString("titulo"), rs.getString("descricao"), cat, 							rs.getDate("data_cri"), rs.getDate("data_atualiza"), rs.getString("resposta"), 							sit, c, t);					break;				case 'T':					c = new User(rs.getInt("id_cliente"), rs.getString("cliente"));					cat = new Camada(rs.getInt("id_categoria"), rs.getString("titulo"));					sit = new Camada(rs.getInt("id_situcao"), rs.getString("situacao"));					req = new Requisicao(rs.getInt("id"), rs.getString("titulo"), rs.getString("descricao"), cat, 							rs.getDate("data_cri"), rs.getDate("data_atualiza"), rs.getString("resposta"), 							sit, c);					break;				case 'C':					cat = new Camada(rs.getInt("id_categoria"), rs.getString("titulo"));					sit = new Camada(rs.getInt("id_situcao"), rs.getString("situacao"));					req = new Requisicao(rs.getInt("id"), rs.getString("titulo"), rs.getString("descricao"), cat, 							rs.getDate("data_cri"), rs.getDate("data_atualiza"), rs.getString("resposta"), 							sit);					break;				}				list.add(req);			}			rs.close();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}		return list;	}	@Override	public void setConnection(Connection connection) {		this.connection = connection;	}}