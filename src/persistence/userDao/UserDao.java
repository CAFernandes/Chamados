package persistence.userDao;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;import java.sql.SQLException;import java.util.ArrayList;import java.util.List;import model.User;import persistence.GenericDAOException;import persistence.connection.GenericDao;import persistence.connection.iGenericDao;public class UserDao implements iUserDao {	private Connection connection;	public UserDao() {		iGenericDao gDao = new GenericDao();		try {			setConnection(gDao.getConnection());		} catch (ClassNotFoundException e) {			e.printStackTrace();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public User autenticar(User user) throws GenericDAOException {		String sql = "SELECT id, nome, email, senha, permissao FROM usuario WHERE email = ? AND senha =?";		PreparedStatement ps;		try {			ps = connection.prepareStatement(sql);			ps.setString(1, user.getEmail());			ps.setString(2, user.getSenha());			ResultSet rs = ps.executeQuery();			if (rs.next()) {				user.setId(rs.getInt("id"));				user.setNome(rs.getString("nome"));				user.setSenha(rs.getString("senha"));				user.setPermissao(rs.getString("permissao").charAt(0));				user.setLogado(true);			}		} catch (SQLException e) {			e.printStackTrace();		}		return user;	}	@Override	public void inserir(User user) throws GenericDAOException {		String sql = "INSERT INTO usuario(nome, nascimento, cpf, email, senha, permissao) VALUES (?, ?, ?, ?, ?, ?)";		PreparedStatement ps;		try {			ps = connection.prepareStatement(sql);			ps.setString(1, user.getNome());			ps.setDate(2, user.getNascimento());			ps.setString(3, user.getCpf());			ps.setString(4, user.getEmail());			ps.setString(5, user.getSenha());			ps.setInt(6, user.getPermissao());			ps.execute();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}	}	@Override	public List<User> listar(String escolha) throws GenericDAOException {		List<User> list = new ArrayList<User>();		try {			String sql = queryListar(escolha);			PreparedStatement ps = connection.prepareStatement(sql);			ResultSet rs = ps.executeQuery();			while (rs.next()) {				User u = new User(rs.getInt("id"), rs.getString("nome"), rs.getDate("nascimento"),						rs.getString("email"));				list.add(u);			}		} catch (SQLException e) {			System.out.println(e);		}		return list;	}//	@Override//	public User consultar(String email) throws GenericDAOException {//		User user = null;//		String sql = "SELECT id, nome,  FROM pessoa WHERE email = ?";//		try {//			PreparedStatement ps = connection.prepareStatement(sql);//			ps.setString(1, email);//			ResultSet rs = ps.executeQuery();//			if(rs.next()) {//				user = new User(rs.getInt("id"), rs.getString("nome"), rs.getString("email"), rs.getString("senha"), rs.getInt("administrador"));//			}//		}catch(SQLException e){//			System.err.println(e);//		}//		return user;//	}	@Override	public void editar(User user) throws GenericDAOException {		String sql = "UPDATE usuario SET nome = ?, nascimento = ?, cpf = ?, email = ?, senha = ?, permissao = ? WHERE id = ?";		PreparedStatement ps;		try {			ps = connection.prepareStatement(sql);			ps.setString(1, user.getNome());			ps.setDate(2, user.getNascimento());			ps.setString(3, user.getCpf());			ps.setString(2, user.getEmail());			ps.setString(3, user.getSenha());			ps.setInt(4, user.getPermissao());			ps.setInt(5, user.getId());			ps.executeQuery();			ps.close();		} catch (SQLException e) {			e.printStackTrace();		}	}	private String queryListar(String escolha) {		switch (escolha) {		case "G":			return "SELECT id, nome, nascimento, email FROM usuario WHERE permissao = G";		case "R":			return "SELECT id, nome, nascimento, email FROM usuario WHERE permissao = R";		case "T":			return "SELECT id, nome, nascimento, email FROM usuario WHERE permissao = T";		default:			return "SELECT id, nome, nascimento, email FROM usuario WHERE permissao = C";		}	}	public void setConnection(Connection connection) {		this.connection = connection;	}}